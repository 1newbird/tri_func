       以前一直听说git、gitee、github这些名词，但一直不清楚具体是什么意思。github这个网站从很早开始就在用了，
但一直没有登录过账号，仅限与找到好的项目后直接下载到本地来进行学习和修改。经过这次课程的学习，对版本控制工具git
的原理和使用都有了一定的了解，并在gitee上进行了一些进一步的使用。自己平常在开发过程中也经常遇到版本管理的问
题，现在算是迎刃而解了。
      原本小组选用的开发语言是C++，但随后决定换成了python。对于python这门语言一直没有具体的学习，对pyton的
了解仅限于他较低的学习成本和较高的开发效率。因为在这之前没有学过python，所以前期投入了一定的精力用于python
的简单学习中，在电脑上按照教程配置了开发环境，配置好pycharm，并对一些实用的库进行了学习。
       对三角函数arcsin的实现在许多语言中都有可以调用的库函数，而以包多而著名的python自然也是如此。但调包与造
轮子的体验可谓是天差地别，尤其是对数学比较薄弱的我来说。在实现中，由于输入的x是有范围的带符号数，所以需要对x
的正负情情况进行相应的讨论，并对超出合理输入集的输入进行过滤。
      虽然实现的只是一个小函数，但还是体会到了合作开发的各种细节。在前期分工后确定好具体的输入输出数据结构以及
封装程度，再对各个模块进行具体的编码，会使得之后的整合过程格外的流畅。而即便整体程序基本编写好后，测试的过程
中也很依赖前期的对各个细节的良好规定,在debug时很容易就能够找到出了问题的函数与模块，单独对模块用一些特殊的测
试用例进行简单的调试就能够最终定位到出错的具体位置，而由于模块间耦合度低，修改的过程也很快就能完成。
       本次项目是我进入本专业以来第一次进入的两人以上项目组，第一次完成了较为完整的软件开发。一系列的文档编写也
能养成大家平时文档规范化的习惯，通过讨论体验到了小组合作的重要性。从0到软件的诞生，将大任务逐渐拆分成一个个部
分，再将一个个部分拆分成小任务分配到各个成员，大家互相合作就能够提高效率。实现1+1大于2或许很难，但实现1+1约
等于2也是件很不容易的事情。
